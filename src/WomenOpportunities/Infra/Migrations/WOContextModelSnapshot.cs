// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WomenOpportunities.Infra.Data;

#nullable disable

namespace WomenOpportunities.Migrations
{
    [DbContext(typeof(WOContext))]
    partial class WOContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Instituicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nome");

                    b.Property<int>("QuantidadeDeOportunidades")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Instituicoes", (string)null);
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Oportunidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("InstituicaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Publicado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<int>("QuantidadeFavoritos")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("Oportunidades", (string)null);
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nome");

                    b.Property<int>("QuantidadeDeFavoritos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Favoritos", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OportunidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioId", "OportunidadeId");

                    b.HasIndex("OportunidadeId");

                    b.ToTable("Favoritos", (string)null);
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Instituicao", b =>
                {
                    b.OwnsOne("WomenOpportunities.Domain.ObjectValue.Contato", "Contato", b1 =>
                        {
                            b1.Property<Guid>("InstituicaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Email");

                            b1.Property<string>("Telefone")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Telefone");

                            b1.HasKey("InstituicaoId");

                            b1.ToTable("Instituicoes");

                            b1.WithOwner()
                                .HasForeignKey("InstituicaoId");
                        });

                    b.OwnsOne("WomenOpportunities.Domain.ObjectValue.Login", "Login", b1 =>
                        {
                            b1.Property<Guid>("InstituicaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("EmailLogin");

                            b1.Property<string>("Senha")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("SenhaLogin");

                            b1.HasKey("InstituicaoId");

                            b1.ToTable("Instituicoes");

                            b1.WithOwner()
                                .HasForeignKey("InstituicaoId");
                        });

                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Login")
                        .IsRequired();
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Oportunidade", b =>
                {
                    b.HasOne("WomenOpportunities.Domain.Entities.Instituicao", "Instituicao")
                        .WithMany("Oportunidades")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("WomenOpportunities.Domain.ObjectValue.Contato", "Contato", b1 =>
                        {
                            b1.Property<Guid>("OportunidadeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Email");

                            b1.Property<string>("Telefone")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Telefone");

                            b1.HasKey("OportunidadeId");

                            b1.ToTable("Oportunidades");

                            b1.WithOwner()
                                .HasForeignKey("OportunidadeId");
                        });

                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("WomenOpportunities.Domain.ObjectValue.Contato", "Contato", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Email");

                            b1.Property<string>("Telefone")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Telefone");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("WomenOpportunities.Domain.ObjectValue.Login", "Login", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("EmailLogin");

                            b1.Property<string>("Senha")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("SenhaLogin");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Login")
                        .IsRequired();
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Favoritos", b =>
                {
                    b.HasOne("WomenOpportunities.Domain.Entities.Oportunidade", "Oportunidade")
                        .WithMany()
                        .HasForeignKey("OportunidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WomenOpportunities.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Favoritos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oportunidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Instituicao", b =>
                {
                    b.Navigation("Oportunidades");
                });

            modelBuilder.Entity("WomenOpportunities.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Favoritos");
                });
#pragma warning restore 612, 618
        }
    }
}
